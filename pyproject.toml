[tool.poetry]
name = "AI workbench"
version = "0.2"
description = "By offering a range of models and features like prompt reusability and flexible experimentation, this AI workbench streamlines complex tasks and fosters rapid innovation."
authors = ["Sytse van der Schaaf <sytse@svdschaaf.nl>"]
packages = [{include = "ai_model_core"}]

[tool.poetry.dependencies]
python = "^3.12"
requests = "^2.31.0"
tqdm = "^4.65.0"
pyyaml = "^6.0"
ollama = ">=0.4.4"
Pillow = ">=9.2.0,<11.0"
gradio = "^5.9.0"
langgraph = "^0.2.19"
pypdf = "^4.3.1"
sentence-transformers = "^3.1.0"
faiss-cpu = "^1.8.0.post1"
beautifulsoup4 = "^4.12.3"
docx2txt = "^0.8"
pymupdf = "^1.24.10"
pytesseract = "^0.3.13"
openai-whisper = "^20240930"
whisper = "^1.1.10"
mistralai = "^1.1.0"
pytest-asyncio = "^0.24.0"
yt-dlp = "^2024.12.23"
moviepy = "^2.1.1"
pytest-cov = "^6.0.0"
langchain = "^0.3.0"
langchain-community = "^0.3.0"
langchain-openai = "^0.2.0"
langchain-anthropic = "^0.2.0"
langchain-google-genai = "^2.0.7"
langchain-ollama = "^0.2.2"
google-genai = "^1.0.0"
unstructured = "^0.16.20"
langchain-cohere = "^0.4.2"

[tool.poetry.group.dev.dependencies]
pytest = "^8.2"
pytest-mock = "^3.10.0"

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
testpaths = ["tests"]
python_files = "test_*.py"
markers = [
    "asyncio: mark test as async"
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"